WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = _{ "''" ~ (!(NEWLINE | "''") ~ ANY)* ~ (NEWLINE | "''") }

ws = _{ WHITESPACE+ }

string = { (!(WHITESPACE ~ "sìk") ~ ANY)* }
string_container = _{ "san" ~ WHITESPACE ~ string ~ WHITESPACE ~ "sìk" }
number = @{ ASCII_OCT_DIGIT+ ~ (WHITESPACE ~ ("melo" | "pxelo"))? }
ident = @{ ('a'..'z' | "ì" | "ä" | "\'")+ }
fun_ident = @{ ident ~ ("." ~ ident)? }

expr = ${
  negation
  | fun_call
  | comparison
  | number
  | string_container
  | ident
}

negation = { "ke" ~ WHITESPACE ~ expr }

comparison = ${ "may'" ~ ws ~ expr ~ ws ~ "sì" ~ ws ~ expr ~ ws ~ "livu" ~ ws ~ comparison_operator }
comparison_operator = { "teng" }

fun_call = !{
  ident ~ (("fa" ~ expr ~ ("sì" ~ expr)*) | "si")
}

fun_dec = {
  "lì'ukìng" ~ fun_ident ~ fun_dec_args? ~ ("alu" ~ block_body ~ ( &"." | "txew"))?
}

fun_dec_args = {
  "fa" ~ ident ~ ("sì" ~ ident)*
}

var_dec = {
  ("'u" | "meu" | "pxeu" | "ayu") ~ ident ~ ("sì" ~ ident)* ~ "alu" ~ expr ~ ("sì" ~ expr)*
}

dec = _{
  "ngop" ~ (fun_dec | var_dec)
}

if_block = {
  "txo" ~ expr ~ "," ~ "tsakrr" ~ block_body ~ (("," ~ "txokefyaw" ~ block_body) | ( &"." | "txew"))
}

loop_block = {
  "leyn" ~ ("vaykrr" ~ expr)? ~ "kem si" ~ block_body ~ "ftang"
}

statement = {
  dec | if_block | loop_block | expr
}

block_body = { statement ~ ("ulte" ~ statement)*}

program = _{ SOI ~ (statement ~ ".")* ~ EOI }
