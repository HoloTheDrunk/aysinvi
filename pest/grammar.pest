WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = _{ "''" ~ (!(NEWLINE | "''") ~ ANY)* ~ (NEWLINE | "''") }
NAVCHAR = _{ 'a'..'z' | "ì" | "ä" | "\'" }

ws = _{ WHITESPACE+ }

// NOTE
string = { (!(ws ~ "sìk") ~ ANY)* }
string_container = _{ "san" ~ ws ~ string ~ ws ~ "sìk" }
number = @{ ASCII_OCT_DIGIT+ ~ (ws ~ ("melo" | "pxelo"))? }
ident = @{ NAVCHAR+ }
fun_ident = @{ ident ~ ("." ~ ident)? }

array = @{ "vezeykoyu" ~ (ws ~ array_items)? }
array_items = ${ expr ~ (ws ~ "sì" ~ ws ~ expr)* }

expr = ${
  negation
  | fun_call
  | comparison
  | array
  | number
  | string_container
  | ident
}

negation = { "ke" ~ WHITESPACE ~ expr }

comparison = ${ "may'" ~ ws ~ expr ~ ws ~ "sì" ~ ws ~ expr ~ ws ~ "livu" ~ ws ~ comparison_operator }
comparison_operator = { "teng" }

fun_call = !{
  ident ~ (("fa" ~ expr ~ ("sì" ~ expr)*) | "si")
}

fun_dec = {
  "lì'ukìng" ~ fun_ident ~ fun_dec_args? ~ ("alu" ~ block_body ~ ( &"." | "txew"))?
}

fun_dec_args = {
  "fa" ~ ident ~ ("sì" ~ ident)*
}

var_dec = {
  ("'u" | "meu" | "pxeu" | "ayu") ~ ident ~ ("sì" ~ ident)* ~ "alu" ~ expr ~ ("sì" ~ expr)*
}

dec = _{
  "ngop" ~ (fun_dec | var_dec)
}

if_block = {
  "txo" ~ expr ~ "," ~ "tsakrr" ~ block_body ~ (("," ~ "txokefyaw" ~ block_body) | ( &"." | "txew"))
}

loop_block = {
  "leyn" ~ ("vaykrr" ~ expr)? ~ "kem si" ~ block_body ~ "ftang"
}

statement = {
  dec | if_block | loop_block | expr
}

mod_use = ${
  "sar" ~ (ws ~ possessive)* ~ ws ~ ident
}

possessive = @{
  (!possessive_ending ~ (NAVCHAR | " "))* ~ possessive_ending
}

possessive_ending = @{
  (
    (
      // Vowel endings
      ( "a" | "ä" | "e" | "i" | "ì" ) ~ "yä"
    )
    |
    (
      // Consonant endings
      ( "'" | "f" | "h" | "k" | "kx" | "l" | "m" | "n" | "ng"
      | "p" | "px" | "r" | "s" | "t" | "ts" | "tx" | "v" | "w" | "y" | "z" )
      ~ "ä"
    )
  )
}

block_body = { statement ~ ("ulte" ~ statement)*}

program = _{ SOI ~ (mod_use ~ ".")* ~ (statement ~ ".")* ~ EOI }
